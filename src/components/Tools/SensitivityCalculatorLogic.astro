---

---

<script is:inline>
  const GameSelectorKey = "havoctools-gameselector";
  const UnitSelectorKey = "havoctools-unitselector";

  function selectorLocalStorageHandler(
    storageKey,
    selectorId,
    defaultSelected
  ) {
    var localStorageData = localStorage.getItem(storageKey);
    var targetValue = null;

    if (localStorageData === null || localStorageData === undefined) {
      targetValue = defaultSelected;
    } else {
      targetValue = localStorageData;
    }

    document.getElementById(selectorId).value = targetValue;
    localStorage.setItem(storageKey, targetValue);
  }

  document.addEventListener("DOMContentLoaded", function () {
    selectorLocalStorageHandler(
      GameSelectorKey,
      "gameselector",
      "gameselector-valorant"
    );
    selectorLocalStorageHandler(
      UnitSelectorKey,
      "unitselector",
      "unitselector-inches"
    );

    showGameSelectorContent(localStorage.getItem(GameSelectorKey));
    showUnitSelectorContent(localStorage.getItem(UnitSelectorKey));

    multiply();
  });

  document.addEventListener("astro:after-swap", function () {
    multiply();
  });

  function multiply() {
    // havoc
    var havocdpi = document.getElementById("havocdpi").value;

    var gameDpi = document.getElementById("gamedpi").value;
    var gameSens = document.getElementById("gamesens").value;

    var sensResult = 0;
    var distanceResult = 0;

    // sens math
    switch (document.getElementById("gameselector").value) {
      case "gameselector-valorant":
        sensResult = ValorantSensitivityCalculator(havocdpi, gameDpi, gameSens);
        break;
      case "gameselector-cs2":
        sensResult = CounterStrike2SensitivityCalculator(
          havocdpi,
          gameDpi,
          gameSens
        );
        break;
      default:
        sensResult = ValorantSensitivityCalculator(havocdpi, gameDpi, gameSens);
        break;
    }

    // distance math
    switch (document.getElementById("unitselector").value) {
      case "unitselector-inches":
        switch (document.getElementById("gameselector").value) {
          case "gameselector-valorant":
            distanceResult = ValorantInchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          case "gameselector-cs2":
            distanceResult = CounterStrike2InchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          default:
            distanceResult = ValorantInchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
        }
        break;
      case "unitselector-centimeters":
        switch (document.getElementById("gameselector").value) {
          case "gameselector-valorant":
            distanceResult = ValorantCentimetersDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          case "gameselector-cs2":
            distanceResult = CounterStrike2CentimetersDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          default:
            distanceResult = ValorantCentimetersDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
        }
        break;
      default:
        switch (document.getElementById("gameselector").value) {
          case "gameselector-valorant":
            distanceResult = ValorantInchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          case "gameselector-cs2":
            distanceResult = CounterStrike2InchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
          default:
            distanceResult = ValorantInchesDistanceCalculator(
              havocdpi,
              gameDpi,
              gameSens
            );
            break;
        }
        break;
    }

    // setting values
    document.getElementById("sensresult").innerHTML =
      "Havoc Sens - " + Math.round(sensResult * 1000) / 1000;

    switch (document.getElementById("unitselector").value) {
      case "unitselector-inches":
        document.getElementById("distantresult").innerHTML =
          "360° Distance - " + Math.round(distanceResult * 1000) / 1000 + "in";
        break;
      case "unitselector-centimeters":
        document.getElementById("distantresult").innerHTML =
          "360° Distance - " + Math.round(distanceResult * 1000) / 1000 + "cm";
        break;
      default:
        document.getElementById("distantresult").innerHTML =
          "360° Distance - " + Math.round(distanceResult * 1000) / 1000 + "in";
        break;
    }
  }

  function showGameSelectorContent(selectedValue) {
    switch (selectedValue) {
      case "gameselector-valorant":
        document.getElementById("game-title").innerHTML = "Valorant";
        break;
      case "gameselector-cs2":
        document.getElementById("game-title").innerHTML = "Counter Strike 2";
        break;
      default:
        document.getElementById("game-title").innerHTML = "Valorant";
        break;
    }

    localStorage.setItem(GameSelectorKey, selectedValue);

    multiply();
  }

  function showUnitSelectorContent(selectedValue) {
    multiply();
    localStorage.setItem(UnitSelectorKey, selectedValue);
  }

  function ValorantSensitivityCalculator(havocdpi, gameDpi, gameSens) {
    return gameSens * 1.44 * (gameDpi / havocdpi);
  }

  function CounterStrike2SensitivityCalculator(havocdpi, gameDpi, gameSens) {
    return 0.45 * gameSens * (gameDpi / havocdpi);
  }

  function ValorantInchesDistanceCalculator(havocdpi, gameDpi, gameSens) {
    return 13067 / (gameSens * gameDpi) / 2.54000562223471;
  }

  function CounterStrike2InchesDistanceCalculator(havocdpi, gameDpi, gameSens) {
    return 41560 / (gameSens * gameDpi) / 2.54000562223471;
  }

  function ValorantCentimetersDistanceCalculator(havocdpi, gameDpi, gameSens) {
    return (
      ValorantInchesDistanceCalculator(havocdpi, gameDpi, gameSens) /
      2.54000562223471
    );
  }

  function CounterStrike2CentimetersDistanceCalculator(
    havocdpi,
    gameDpi,
    gameSens
  ) {
    return (
      CounterStrike2InchesDistanceCalculator(havocdpi, gameDpi, gameSens) /
      2.54000562223471
    );
  }
</script>
